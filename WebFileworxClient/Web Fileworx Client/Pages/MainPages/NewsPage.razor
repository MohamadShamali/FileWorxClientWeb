@inject NewsServices newsServicies
@inject UsersServices usersServicies
@inject NavigationManager navnManager
@inject IJSRuntime JSRuntime


@page "/f"

<img class="mb-2.5 w-72" src="images/download.png" alt="download" />

<div class="flex mt-1">
    <button @onclick=addNewsRequest class="bg-fw-blue hover:bg-fw-blue-hover rounded-md mr-2 text-white p-1 cursor-pointer"><b>Add News</b></button>
    <button @onclick=addImageRequest class="bg-fw-blue hover:bg-fw-blue-hover rounded-md mr-2 text-white p-1 cursor-pointer"><b>Add Image</b></button>
    <button @onclick="EditRequest" class="@editButtonClass()" disabled="@removeAndEditDisable()"><b>Edit Image/News</b></button>
    <button @onclick="removeRequest" class="@removeButtonClass()" disabled="@removeAndEditDisable()"><b>Remove </b></button>
    @if (usersServicies.loggedInUser.IsAdmin)
    {
        <button @onclick=openAdminTab class="mr-1 bg-prpl hover:bg-prpl-hover rounded-md text-white p-1 cursor-pointer ml-auto"><b>Admin Window</b></button>
    }
</div>

<div class="flex justify-between">

    <div class="flex-grow w-1/2 mr-10">
        <NewsTable OnRowClick="OnRowClick"/>
    </div>


    <div class="flex-grow w-1/2 ">
        @if(showdetails){
            <NewsDetails selectedNews="newsServicies.SelectedNews" />
        }
    </div>
</div>

@if (showAddNewsWindow)
{
    <NewNewsWindow OnSave="onSaveNews" OnCancel="onCancel"> </NewNewsWindow>
}
@if (showAddImageWindow)
{
    <NewImageWindow OnSave="onSaveImage" OnCancel="onCancel"> </NewImageWindow>
}
@if (showDeleteConfirmationWindow)
{
    <DeleteConfirmationWindow OnDelete="onConfirmDelete" OnCancel="onCancel"></DeleteConfirmationWindow>
}
@if (showEditNewsWindow)
{
    <EditNewsWindow OnSave="onSaveNews" OnCancel="onCancel"></EditNewsWindow>
}
@if (showEditImageWindow)
{
    <EditImageWindow OnSave="onSaveImage" OnCancel="onCancel"> </EditImageWindow>
}

@code {
    private bool showAddNewsWindow = false;
    private bool showAddImageWindow = false;
    private bool showDeleteConfirmationWindow = false;
    private bool showEditNewsWindow = false;
    private bool showEditImageWindow = false;

    private bool showdetails = true;

    private bool confirmDelete = false;

    private void openAdminTab()
    {
        string url = navnManager.BaseUri + "admin"; 
        JSRuntime.InvokeVoidAsync("open", url, "_blank");
    }

    private void removeRequest()
    {
        showDeleteConfirmationWindow = true;
    }

    private void onConfirmDelete()
    {
        confirmDelete = true;
        if (newsServicies.SelectedNews != null)
        {
            if (newsServicies.SelectedNews is Image)
            {
                Image selectedImage = (Image)newsServicies.SelectedNews;

                newsServicies.RemoveImageTextFile(selectedImage);
                newsServicies.RemoveImageImage(selectedImage);
            }

            else
            {
                newsServicies.RemoveNews(newsServicies.SelectedNews);
            }
            newsServicies.SelectedNews = null;
            newsServicies.RefreshNews();
        }
        confirmDelete = false;

        showDeleteConfirmationWindow = false;
    }

    private void EditRequest()
    {
        if(newsServicies.SelectedNews is Image)
        {
            showEditImageWindow = true;
        }

        else
        {
            showEditNewsWindow = true;
        }
    }

    private void onCancel()
    {
        showAddNewsWindow = false;
        showAddImageWindow = false;

        showDeleteConfirmationWindow = false;
        confirmDelete = false;

        showEditNewsWindow = false;
        showEditImageWindow = false;
    }

    private void onSaveNews(News news)
    {
        newsServicies.RemoveNews(news); //For Edit Case

        newsServicies.AddNews(news);
        newsServicies.RefreshNews();

        showAddNewsWindow = false;
        showEditNewsWindow = false;
    }

    private void onSaveImage(Image image)
    {
       // newsServicies.RemoveImage(image); //delete old image and text file

        newsServicies.AddImage(image);
        newsServicies.RefreshNews();
        showdetails = false;

        showAddImageWindow = false;
        showEditImageWindow = false;

        newsServicies.SelectedNews = null;

        showdetails = true;
    }


    private void addNewsRequest()
    {
        showAddNewsWindow = true;
    }

    private void addImageRequest()
    {
        showAddImageWindow = true;
    }

    private string removeButtonClass()
    {
        if (newsServicies.SelectedNews != null)
        {
            return "bg-rid hover:bg-rid-hover rounded-md mr-2 text-white p-1 cursor-pointer";
        }
        else
        {
            return "bg-disable rounded-md mr-2 text-white p-1 cursor-default";
        }
    }

    private bool removeAndEditDisable()
    {
        if (newsServicies.SelectedNews != null)
        {
            return false;
        }
        else
        {
            return true;
        }
    }

    private string editButtonClass()
    {
        if (newsServicies.SelectedNews != null)
        {
            return "bg-fw-blue hover:bg-fw-blue-hover rounded-md mr-2 text-white p-1 cursor-pointer";
        }
        else
        {
            return "bg-disable rounded-md mr-2 text-white p-1 cursor-default";
        }
    }
    private void OnRowClick(News news)
    {
        if (newsServicies.SelectedNews == news)
        {
            newsServicies.SetSelectedNews(null); // Deselect the row if it's already selected
        }

        else
        {
            newsServicies.SetSelectedNews(news); // Select the clicked row
        }
    }

}

